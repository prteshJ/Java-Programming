package liangChapter26_Examples;

public class AVLTree<E extends Comparable<E>> extends BST<E> {
	/** Create an empty AVL tree */
	public AVLTree() {
	}

	/** Create an AVL tree from an array of objects */
	public AVLTree(E[] objects) {
		super(objects);
	}

	@Override  /** Override createNewNode to create an AVLTreeNode */
	protected AVLTreeNode<E> createNewNode(E e) {
		return new AVLTreeNode<E>(e);
	}
	
	@Override  /** Insert an element and rebalance if necessary */
	public boolean insert(E e) {
		boolean successful = super.insert(e);
		if(!successful)
			return false; // e is already in the tree
		else {
			
		}
		return true; // e is inserted
	}
	
	/** Balance the nodes in the path from the specified
	 * node to the root if necessary
	 */

	/** AVLTreeNode is TreeNode plus height */
	protected static class AVLTreeNode<E extends Comparable<E>> extends BST.TreeNode<E> {
		protected int height = 0; // New data field

		public AVLTreeNode(E e) {
			super(e);
		}
	}
}
