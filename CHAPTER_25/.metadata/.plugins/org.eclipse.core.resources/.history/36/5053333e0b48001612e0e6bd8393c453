package liangChapter25_Examples;

import java.util.Scanner;

public class HuffManCode {
	public static void main(String args) { 
		Scanner input = new Scanner(System.in);

		/** Define a Huffman coding tree */
		public static class hTree implements Comparable<hTree> {
			Node root; // The root of the tree

			/** Create a tree with two subtrees */
			public hTree(hTree t1, hTree t2) {
				root = new Node();
				root.left = t1.root;
				root.right = t2.root;
				root.weight = t1.root.weight + t2.root.weight;
			}

			/** Create a tree containing a leaf node */
			public hTree(int weight, char element) {
				root = new Node(weight, element);
			}

			@Override /** Compare trees based on their weights */
			public int compareTo(hTree t) {
				if(root.weight < t.root.weight) // Purposely reverse the order
					return 1;
				else if(root.weight == t.root.weight)
					return 0;
				else 
					return -1;
			}

			public class Node {
				char element; // Stores the character for a leaf node
				int weight; // weight of the subtree rooted at this node
				Node left; // Reference to the left subtree
				Node right; // Reference to the right subtree
				String code = ""; // The code of this node from the root

				/** Create an empty node */
				public Node() {
				}

				/** Create a node with the specified weight and character */
				public Node(int weight, char element) {
					this.weight = weight;
					this.element = element;
				}
			}
		}
	}
}
